{{ 'ways-to-redeem.css' | asset_url | stylesheet_tag }}
<script>
 
    // Function to create HTML for list items
    function createRedeemItem(options, iconSvg, amount) {
      const customer = '{{ customer.id }}';
        return options.map(option => `
            <li class="item-box">
                <div class="content icon">${iconSvg}</div>
                <div class="content">
                    <div class="card-title">${option.title}</div>
                    <div class="card-description">${option.description}</div>
                </div>
                ${amount >= option.points_to_redeem && customer ? "<button data-amount="+option.points_to_redeem+" data-id="+customer+" class='button redeem_button'>Redeem</button><p class='success_message'></p>" : "<button data-amount="+option.points_to_redeem+" class='button redeem_button disabled' disabled>Earn "+parseInt(option.points_to_redeem-amount)+" Points</button>"}
            </li>
        `).join('');
    }

    (async function() {
        try {
            const info = await window.myinfo;
            const data = info.data.settings;
            console.log(data);
            const starIconSvg = `
                <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="star" 
                    class="svg-inline--fa fa-star" role="img" xmlns="http://www.w3.org/2000/svg" 
                    viewBox="0 0 576 512" style="color: rgb(77, 111, 177);">
                    <path fill="currentColor" 
                        d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 
                        145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 
                        46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 
                        316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"></path>
                </svg>
            `;

            const pointsBalance = await window.pointsBalance;

            if(pointsBalance.code == 200) {
              var amount = pointsBalance.data.point_balance;
            } else {
              var amount = '0';
            }

            document.getElementById('ways_to_redeem').innerHTML = 
                createRedeemItem(data.points_card.ways_to_redeem.options, starIconSvg, amount);

        } catch (error) {
            console.error('Error fetching rewards:', error);
        }
    })();

  document.addEventListener('DOMContentLoaded', () => {
      // Attach the event listener to a parent element, such as the document or a specific container
      document.addEventListener('click', async (event) => {
          // Check if the clicked element is a "Redeem" button
          if (event.target.classList.contains('redeem_button')) {
              // Get data properties from the clicked button
              const customerId = event.target.getAttribute('data-id');
              const amount = event.target.getAttribute('data-amount');
  
              try {
                  // Make the POST request to redeem points
                  const response = await sdk.resource.postRedeemPoints({
                      client_customer_id: customerId,
                      amount: parseInt(amount, 10) // Convert amount to an integer
                  });
  
                  if (response.code == 200) {
                      // Handle successful redemption (e.g., show a success message)
                       const successMessageElement = event.target.closest('li').querySelector('.success_message');
                      successMessageElement.innerHTML = response.message;

                      // Clear the message after 5 seconds
                      setTimeout(() => {
                          successMessageElement.innerHTML = '';
                      }, 5000);
                        //alert('Points redeemed successfully!');
                  } else {
                      // Handle error in redemption (e.g., show an error message)
                      console.log('Failed to redeem points. Please try again.');
                  }
              } catch (error) {
                  // Handle any other errors
                  console.error('Error redeeming points:', error);
                  console.log('An error occurred while redeeming points.');
              }
          }
      });
  });


</script>



<!-- Ways to Redeem Points Section -->
<div class="page-width section-{{ section.id }}-padding" id="loyalty_ways_to_redeem">
  <h2 class="main-page-title page-title h1{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
    Ways to Redeem your Points
  </h2>
  <div class="rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <ul id="ways_to_redeem" class="multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider %} slider slider--tablet grid--peek{% endif %}" role="list"></ul>
  </div>
</div>

{% schema %}
{
  "name": "Ways To Redeem",
  "tag": "section",
  "class": "ways_to_redeem",
  "settings": [
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top Padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom Padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Ways To Redeem"
    }
  ]
}
{% endschema %}
